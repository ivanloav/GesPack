-- TABLAS QUE NO ESTAN EN ESTE SCRIPT:
    -- correspondence_mocall



-- PostgreSQL script to create tables and relationships for a deployment system


DROP TABLE IF EXISTS sites CASCADE;
CREATE TABLE sites (
    site_id BIGINT PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
    site_name TEXT NOT NULL CHECK (site_name ~ '^[A-Z]{1,15}$'),
    site_description TEXT,
    contact_info TEXT,
    is_active BOOLEAN NOT NULL DEFAULT FALSE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,

    UNIQUE (site_name)
);

DROP INDEX IF EXISTS idx_sites_site_name CASCADE;
CREATE INDEX idx_sites_site_name ON sites (site_name);

DROP FUNCTION IF EXISTS update_timestamp() CASCADE;
CREATE OR REPLACE FUNCTION update_timestamp()
RETURNS TRIGGER AS $$
BEGIN
    NEW.updated_at = CURRENT_TIMESTAMP;
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER trigger_update_timestamp
BEFORE UPDATE ON sites
FOR EACH ROW
EXECUTE FUNCTION update_timestamp();

DROP TABLE IF EXISTS users CASCADE;

CREATE TABLE users (
    user_id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    user_name TEXT NOT NULL,
    user_password TEXT NOT NULL,     -- Guarda siempre hash, no texto plano
    email TEXT,
    is_customer BOOLEAN DEFAULT FALSE,
    is_admin BOOLEAN DEFAULT FALSE,
    is_active BOOLEAN DEFAULT TRUE,
    is_cb BOOLEAN DEFAULT FALSE,
    is_list BOOLEAN DEFAULT FALSE,
    bd_customer TEXT,
    created_by TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    modified_by TEXT,
    modified_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE INDEX idx_users_name ON users (user_name);
CREATE INDEX idx_users_email ON users (email);

DROP TABLE IF EXISTS user_sites CASCADE;

CREATE TABLE user_sites (
    user_site_id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    user_id BIGINT NOT NULL,
    site_id BIGINT NOT NULL,

    FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE,
    FOREIGN KEY (site_id) REFERENCES sites(site_id) ON DELETE CASCADE
);

CREATE INDEX idx_user_sites_site ON user_sites (site_id);

DROP TABLE IF EXISTS brands CASCADE;
CREATE TABLE brands (
    brand_id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,                       -- ID único para cada acción
    site_id BIGINT NOT NULL,                                                        -- ID del sitio al que pertenece la acción
    brand_name TEXT NOT NULL,                                                      -- MARCA
    description TEXT,                                                               -- DESCRIPCION
    start_date DATE,                                                           -- FECHA_INICIO
    end_date DATE,                                                             -- FECHA_FIN
    is_active BOOLEAN DEFAULT TRUE,                                                 -- ACTIVO
    created_by TEXT,                                                                -- CREADOR
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,                                 -- FECHA_CREACION
    modified_by TEXT,                                                               -- MODIFICADOR
    modified_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,                                -- FECHA_MODIFICACION

    UNIQUE (site_id, brand_name),                                                -- Clave primaria compuesta
    UNIQUE (site_id, brand_id),

    FOREIGN KEY (site_id) REFERENCES sites(site_id) ON DELETE RESTRICT
);
    
    DROP INDEX IF EXISTS idx_brands_brand_id CASCADE;
    CREATE INDEX idx_brands_brand_id ON brands (brand_id);                  -- Índice para mejorar las búsquedas
    DROP INDEX IF EXISTS idx_brands_brand_name CASCADE;
    CREATE INDEX idx_brands_brand_name ON brands (brand_name);                     -- Índice para mejorar las búsquedas por marca

DROP TABLE IF EXISTS action_categories CASCADE;
CREATE TABLE action_categories (
    action_category_id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,         -- ID único de la categoría
    site_id BIGINT NOT NULL,                                                    -- ID del sitio al que pertenece la categoría
    category_name TEXT NOT NULL,                                                -- Nombre de la categoría
    description TEXT,                                                           -- Descripción de la categoría
    created_by TEXT,                                                            -- CREADOR
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,                             -- FECHA_CREACION
    modified_by TEXT,                                                           -- MODIFICADOR
    modified_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,                            -- FECHA_MODIFICACION

    UNIQUE (site_id, category_name),                                            -- Clave única compuesta
    UNIQUE (site_id, action_category_id),

    FOREIGN KEY (site_id) REFERENCES sites(site_id) ON DELETE RESTRICT
);

DROP TABLE IF EXISTS action_priority_types CASCADE;
CREATE TABLE action_priority_types (
    action_priority_id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,     -- ID único del tipo de prioridad
    site_id BIGINT NOT NULL,                                                -- ID del sitio
    priority_name TEXT NOT NULL,                                            -- Nombre del tipo de prioridad (e.g., "NORMAL", "EXPRESS")
    created_by TEXT,                                                        -- CREADOR
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,                         -- FECHA_CREACION
    modified_by TEXT,                                                       -- MODIFICADOR
    modified_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,                        -- FECHA_MODIFICACION

    UNIQUE (site_id, priority_name),                                    -- Clave primaria compuesta
    UNIQUE (site_id, action_priority_id),

    FOREIGN KEY (site_id) REFERENCES sites(site_id) ON DELETE RESTRICT
);

DROP TABLE IF EXISTS action_category_costs CASCADE;
CREATE TABLE action_category_costs (
    category_cost_id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,   -- PK técnica
    site_id BIGINT NOT NULL,                                            -- Cliente
    category_cost_name TEXT NOT NULL,                                   -- Nombre del coste
    action_category_id INT NOT NULL,                                    -- Categoría
    action_priority_id INT NOT NULL,                                    -- Tipo de prioridad
    shipping_cost NUMERIC(19, 4) NOT NULL,                              -- Coste de envío
    mandatory_fee NUMERIC(19, 4) DEFAULT 0,                             -- Tarifas adicionales
    created_by TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    modified_by TEXT,
    modified_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,

    UNIQUE (site_id, category_cost_name),                               -- Clave de negocio única por cliente

    FOREIGN KEY (site_id) REFERENCES sites(site_id) ON DELETE RESTRICT,
    FOREIGN KEY (site_id, action_category_id) REFERENCES action_categories(site_id, action_category_id) ON DELETE CASCADE,
    FOREIGN KEY (site_id, action_priority_id) REFERENCES action_priority_types(site_id, action_priority_id) ON DELETE CASCADE
);

DROP TABLE IF EXISTS actions CASCADE;
CREATE TABLE actions (
    action_id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,                      -- ID único para cada acción
    site_id BIGINT NOT NULL,                                                        -- ID del sitio al que pertenece la acción
    action_name TEXT NOT NULL,                                                      -- ACCION
    description TEXT,                                                               -- DESCRIPCION
    launch_date TIMESTAMP NOT NULL,                                                 -- FECHA_LANZAMIENTO
    brand_id BIGINT NOT NULL,                                                                     -- Marca
    print_run INT,                                                                  -- TIRADA
    deposit_date TIMESTAMP NOT NULL,                                                -- DATE_DEPOT
    is_active BOOLEAN DEFAULT TRUE,                                                 -- ESTADO
    catalog_code TEXT,                                                              -- CODE_CATALOGUE
    catalog_lot TEXT,                                                               -- LOT_CATALOGUE
    catalog_description TEXT,                                                       -- DESC_CATALOGUE
    action_category_id INT,  -- Categoría de la acción
    created_by TEXT,                                                                -- CREADOR
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,                                 -- FECHA_CREACION
    modified_by TEXT,                                                               -- MODIFICADOR
    modified_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,                                -- FECHA_MODIFICACION


    UNIQUE (site_id, action_name),                                                   -- Clave única compuesta
    UNIQUE (site_id, action_id),                                                    -- Clave primaria compuesta

    FOREIGN KEY (site_id) REFERENCES sites(site_id) ON DELETE RESTRICT,
    FOREIGN KEY (site_id, action_category_id) REFERENCES action_categories(site_id, action_category_id) ON DELETE SET NULL, -- Referencia a categorías
    FOREIGN KEY (site_id, brand_id) REFERENCES brands(site_id, brand_id) ON DELETE SET NULL -- Referencia a brands
);

DROP INDEX IF EXISTS idx_actions_site_action_name CASCADE;
    CREATE INDEX idx_actions_site_action_name ON actions (site_id, action_name);

DROP TABLE IF EXISTS customer_marked_types CASCADE;
CREATE TABLE customer_marked_types (
    marked_type_id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    site_id BIGINT NOT NULL,                                                        -- ID_SITE (ID del sitio)
    name TEXT NOT NULL,
    description TEXT,
    created_by TEXT,                                                                -- CREADOR
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,                                 -- FECHA_CREACION
    modified_by TEXT,                                                               -- MODIFICADOR
    modified_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,                                -- FECHA_MODIFICACION

    UNIQUE (site_id, name),                                                        -- Clave primaria compuesta
    UNIQUE (site_id, marked_type_id),

    FOREIGN KEY (site_id) REFERENCES sites(site_id) ON DELETE RESTRICT
);
 
DROP TABLE IF EXISTS customer_rnvp_types CASCADE;
 CREATE TABLE customer_rnvp_types (
    rnvp_type_id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    site_id BIGINT NOT NULL,                                                        -- ID_SITE (ID del sitio)
    name TEXT NOT NULL,
    description TEXT,
    created_by TEXT,                                                                -- CREADOR
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,                                 -- FECHA_CREACION
    modified_by TEXT,                                                               -- MODIFICADOR
    modified_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,                                -- FECHA_MODIFICACION

    UNIQUE (site_id, name),                                                        -- Clave primaria compuesta
    UNIQUE (site_id, rnvp_type_id),

    FOREIGN KEY (site_id) REFERENCES sites(site_id) ON DELETE RESTRICT
);
 
DROP TABLE IF EXISTS customers CASCADE;
 CREATE TABLE customers (
    customer_id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,        -- NUMERO_DE_CLIENT
    site_id BIGINT NOT NULL,                                            -- ID_SITE (ID del sitio)
    customer_code BIGINT NOT NULL,                                      -- NUMERO_DE_CLIENT
    customer_gender TEXT,                                               -- SEXO (Género)
    customer_first_name TEXT,                                           -- NOMBRE (Nombre del cliente)
    customer_last_name TEXT,                                            -- APELLIDO (Apellido del cliente)

    -- Dirección de facturación     
    -- billing_customer_name TEXT,                                      -- NOMBRE (Nombre del cliente)
    billing_gender TEXT,                                                -- SEXO (Género)
    billing_first_name TEXT,                                            -- NOM (Primer nombre)
    billing_last_name TEXT,                                             -- APE (Apellido)
    billing_address_line1 TEXT,                                         -- DIR1 (Dirección línea 1)
    billing_address_line2 TEXT,                                         -- DIR2 (Dirección línea 2)
    billing_address_line3 TEXT,                                         -- DIR3 (Dirección línea 3)
    billing_address_line4 TEXT,                                         -- DIR4 (Dirección línea 4)
    billing_address_cp TEXT,                                            -- CP (Dirección línea 5)
    billing_address_city TEXT,                                          -- POBLACION (Dirección línea 5)
    billing_mobile_phone TEXT,                                          -- PORTABLE (Teléfono móvil)
    -- Dirección de envío                               
    -- shipping_customer_name TEXT,                                     -- NOMBRE (Nombre del cliente)
    shipping_gender TEXT,                                               -- SEXO (Género)
    shipping_first_name TEXT,                                           -- NOM (Primer nombre)
    shipping_last_name TEXT,                                            -- APE (Apellido)
    shipping_address_line1 TEXT,                                        -- DIR1 (Dirección línea 1)
    shipping_address_line2 TEXT,                                        -- DIR2 (Dirección línea 2)
    shipping_address_line3 TEXT,                                        -- DIR3 (Dirección línea 3)
    shipping_address_line4 TEXT,                                        -- DIR4 (Dirección línea 4)
    shipping_address_cp TEXT,                                           -- CP (Dirección línea 5)
    shipping_address_city TEXT,                                         -- POBLACION (Dirección línea 5)
    shipping_mobile_phone TEXT,                                         -- PORTABLE (Teléfono móvil)

    phone TEXT,                                                         -- TEL (Teléfono)
    birth_date DATE,                                                    -- FECHA_NACIMIENTO (Fecha de nacimiento)
    npai TEXT,                                                          -- P1 (NPAI)
    rfm TEXT,                                                           -- Q1 (RFM)
    credit_risk TEXT,                                                   -- R1 (MOROSOS Y MALPAGADORES)
    source_origin TEXT,                                                 -- S1 (Campo adicional S1)
    is_under_guardianship BOOLEAN NOT NULL DEFAULT FALSE,               -- TUTELADO (Tutelado, booleano con valor predeterminado FALSE)
    is_deceased BOOLEAN NOT NULL DEFAULT FALSE,                         -- DECEDE (Fallecido, booleano con valor predeterminado FALSE)
    do_not_contact BOOLEAN NOT NULL DEFAULT FALSE,                      -- ROBINSON (Robinson, booleano con valor predeterminado FALSE)
    rnvp_type_id INT,                                                   -- RNVP (Tipo de RNVP)
    marked_type_id INT,                                                 -- MARCADO (Tipo de marcado)
    -- insert TEXT,                                                     -- ENCARTE (Inserto)
    email TEXT,                                                         -- EMAIL (Correo electrónico)
    privileged BOOLEAN NOT NULL DEFAULT FALSE,                          -- PRIVILEGIE (Privilegiado, booleano con valor predeterminado FALSE)
    privileged_date DATE,                                               -- DATE_PRIVILEGIE (Fecha de privilegio)
    created_by TEXT,                                                    -- CREADOR
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,                     -- FECHA_CREACION
    modified_by TEXT,                                                   -- MODIFICADOR
    modified_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,                    -- FECHA_MODIFICACION

    UNIQUE (site_id, customer_code),
    UNIQUE (site_id, customer_id),                                      -- Clave primaria compuesta

    FOREIGN KEY (site_id) REFERENCES sites(site_id) ON DELETE RESTRICT,
    FOREIGN KEY (site_id, rnvp_type_id) REFERENCES customer_rnvp_types (site_id, rnvp_type_id) ON DELETE RESTRICT,
    FOREIGN KEY (site_id, marked_type_id) REFERENCES customer_marked_types (site_id, marked_type_id) ON DELETE RESTRICT
);

DROP INDEX IF EXISTS idx_customers_code CASCADE;
    CREATE INDEX idx_customers_code ON customers (site_id, customer_code);
DROP INDEX IF EXISTS idx_customers_last_name CASCADE;
    CREATE INDEX idx_customers_last_name ON customers (customer_last_name);

DROP TABLE IF EXISTS correspondence CASCADE;
CREATE TABLE correspondence (
    correspondence_id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY, -- PK técnica
    site_id BIGINT NOT NULL,                                           -- Cliente
    customer_id BIGINT NOT NULL,                                         -- ID del cliente
    customer_code BIGINT,                                                -- NUM_CLIENTE
    order_reference TEXT,                                              -- PEDIDO
    sent_date DATE NOT NULL,                                           -- FECHA
    letter_type TEXT,                                                  -- TIPO_CARTA

    UNIQUE (site_id, correspondence_id),                             -- Clave primaria compuesta
    UNIQUE (site_id, customer_id),                                   -- Evitar duplicados por ID cliente
    UNIQUE (site_id, customer_code),                                 -- Evitar duplicados por cliente

    FOREIGN KEY (site_id) REFERENCES sites(site_id) ON DELETE RESTRICT,
    FOREIGN KEY (site_id, customer_id) REFERENCES customers(site_id, customer_id) ON DELETE RESTRICT,
    FOREIGN KEY (site_id, customer_code) REFERENCES customers(site_id, customer_code) ON DELETE RESTRICT
);

-- Si necesitas evitar duplicados por cliente y fecha:
CREATE UNIQUE INDEX idx_correspondence_site_date ON correspondence (site_id, customer_code, sent_date);

-- Índices para mejorar las búsquedas
DROP INDEX IF EXISTS idx_correspondence_customer_id CASCADE;
CREATE INDEX idx_correspondence_customer_id ON correspondence (site_id, customer_id);

DROP INDEX IF EXISTS idx_correspondence_customer_code CASCADE;
CREATE INDEX idx_correspondence_customer_code ON correspondence (site_id, customer_code);

DROP INDEX IF EXISTS idx_correspondence_order_reference CASCADE;
CREATE INDEX idx_correspondence_order_reference ON correspondence (site_id, order_reference);

DROP TABLE IF EXISTS order_payments_card_types CASCADE;
CREATE TABLE order_payments_card_types (
    card_type_id BIGINT PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
    card_type_name TEXT NOT NULL UNIQUE,                                    -- Nombre del tipo de tarjeta, como 'VISA', 'MasterCard', etc.
    created_by TEXT,                                                        -- CREADOR
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,                         -- FECHA_CREACION
    modified_by TEXT,                                                       -- MODIFICADOR
    modified_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP                        -- FECHA_MODIFICACION
);

DROP INDEX IF EXISTS idx_order_payments_card_types_name CASCADE;
CREATE INDEX idx_order_payments_card_types_name ON order_payments_card_types (card_type_name);

DROP TABLE IF EXISTS order_payments CASCADE;

CREATE TABLE order_payments (
    order_payments_id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    site_id BIGINT NOT NULL,
    order_id BIGINT NOT NULL,

    payment_type TEXT NOT NULL,           -- efectivo, tarjeta, cheque, aplazado, etc.
    is_deferred BOOLEAN DEFAULT FALSE,    -- ¿Pago aplazado?
    schedule_count INT NOT NULL DEFAULT 1 CHECK (schedule_count >= 1 AND schedule_count <= 4),
    holder_name TEXT,
    amount NUMERIC(19,4) NOT NULL,        -- Importe del pago total (suma de plazos si aplazado)

    -- Campos para cheque
    bank_name TEXT,
    cheque_number TEXT,

    -- Campos para tarjeta
    card_type_id INT,
    card_number BIGINT,
    expiration_date VARCHAR(5),
    security_code INT,

    -- Estado del pago
    is_unpaid BOOLEAN DEFAULT FALSE,
    unpaid_amount NUMERIC(19,4),
    unpaid_date DATE,
    is_recovered BOOLEAN DEFAULT FALSE,
    recovered_amount NUMERIC(19,4),
    recovery_date DATE,
    is_uncollectible BOOLEAN DEFAULT FALSE,
    uncollectible_amount NUMERIC(19,4),
    uncollectible_date DATE,

    created_by TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    modified_by TEXT,
    modified_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,

    UNIQUE (site_id, order_payments_id),
    FOREIGN KEY (site_id) REFERENCES sites(site_id) ON DELETE RESTRICT,
    -- FOREIGN KEY (site_id, order_id) REFERENCES orders(site_id, order_id) ON DELETE RESTRICT,
    FOREIGN KEY (card_type_id) REFERENCES order_payments_card_types(card_type_id) ON DELETE CASCADE
);

DROP INDEX IF EXISTS idx_order_payments_order_id CASCADE;
CREATE INDEX idx_order_payments_order_id ON order_payments (site_id, order_id);

DROP INDEX IF EXISTS idx_order_payments_payment_type CASCADE;
CREATE INDEX idx_order_payments_payment_type ON order_payments (site_id, payment_type);

DROP INDEX IF EXISTS idx_order_payments_deferred CASCADE;
CREATE INDEX idx_order_payments_deferred ON order_payments (site_id, is_deferred);

DROP TABLE IF EXISTS order_payment_schedules CASCADE;
CREATE TABLE order_payment_schedules (
    order_payment_schedule_id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    site_id BIGINT NOT NULL,
    order_payments_id BIGINT NOT NULL,
    schedule_number INT NOT NULL,            -- Plazo: 1, 2, 3, 4...
    amount NUMERIC(19,4) NOT NULL,
    due_date DATE,
    is_paid BOOLEAN DEFAULT FALSE,
    paid_date DATE,
    is_unpaid BOOLEAN DEFAULT FALSE,
    unpaid_date DATE,
    is_recovered BOOLEAN DEFAULT FALSE,
    recovered_date DATE,
    cheque_number TEXT,
    bank_name TEXT,
    created_by TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    modified_by TEXT,
    modified_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,

    UNIQUE (site_id, order_payments_id, schedule_number),
    FOREIGN KEY (site_id) REFERENCES sites(site_id) ON DELETE RESTRICT,
    FOREIGN KEY (site_id, order_payments_id) REFERENCES order_payments(site_id, order_payments_id) ON DELETE CASCADE
);

DROP INDEX IF EXISTS idx_order_payment_schedules_site_payment CASCADE;
CREATE INDEX idx_order_payment_schedules_site_payment ON order_payment_schedules (site_id, order_payments_id);

DROP TABLE IF EXISTS Orders CASCADE;
CREATE TABLE Orders (
    order_id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,   -- ID (Clave primaria autonumérica)
    site_id BIGINT NOT NULL,                                    -- ID_SITE
    order_datetime TIMESTAMP,                                   -- FECHA_PEDIDO
    order_reference TEXT NOT NULL,                              -- PEDIDO (Código o número del pedido)
    brand_id BIGINT NOT NULL,                                   -- Marca
    source TEXT,                                                -- Origen
    action_id BIGINT,                                           -- ACCION
    action_category_id INT NOT NULL,                            -- Categoría asociada
    action_priority_id INT,                                     -- Tipo de prioridad
    shipping_cost NUMERIC(19, 4),                               -- ENVIO
    mandatory_shipping_fee NUMERIC(19, 4),                      -- FRAIS
    customer_id BIGINT,                                         -- REF_CLIENTE
    gender TEXT,                                                -- SEXO
    first_name TEXT,                                            -- NOM
    last_name TEXT,                                             -- APE
    payment_type_id BIGINT NOT NULL,                            -- TIPO_PAGO (ID que referencia a OrdersPayments)
    is_paid BOOLEAN DEFAULT FALSE,                              -- COBRADO
    paid_date DATE DEFAULT NULL,                                -- GESTION_COBRO
    is_invoiced BOOLEAN DEFAULT FALSE,                          -- Facturado
    invoiced_date DATE DEFAULT NULL,                            -- Fecha Facturado
    order_lines BIGINT DEFAULT 0,                               -- LINEAS_PEDIDO
    weight FLOAT DEFAULT 0,                                     -- Peso
    client_type NUMERIC(18, 0),                                 -- TIPO_CLIENTE
    participant TEXT,                                           -- PARTICIPANTE
    order_amount NUMERIC(19,4),                                 -- IMPORTE_PEDIDO
    bi1 NUMERIC(19,4),                                          -- BI1
    bi2 NUMERIC(19,4),                                          -- BI2
    tva1 NUMERIC(19,4),                                         -- TVA1
    tva2 NUMERIC(19,4),                                         -- TVA2
    return_status TEXT,                                         -- DEVOLUCION
    shipping_type TEXT,                                         -- TIPO_ENVIO
    value_em NUMERIC(18, 0),                                    -- VALOR
    is_callcenter BOOLEAN DEFAULT FALSE,                        -- CALLCENTER
    is_stock_reserved BOOLEAN DEFAULT FALSE,                    -- RESERVASTOCK
    last_letter TEXT,                                           -- ULTIMA_CARTA
    is_upselling BOOLEAN DEFAULT FALSE,                         -- UPSELLING
    is_upselling_purchase BOOLEAN DEFAULT FALSE,                -- COMPRA_UPSELLING
    upselling_amount NUMERIC(19,4),                             -- IMPORTE_UPSELLING
    upselling_offer TEXT,                                       -- OFERTA_UPSELLING
    is_deferred BOOLEAN DEFAULT FALSE,                          -- APLAZADO
    transport TEXT,                                             -- TRSP
    discount NUMERIC(19,4),                                     -- RED10 (Descuento del 10%)
    is_privileged BOOLEAN DEFAULT FALSE,                        -- IS_PRIVILEGIE
    club_card_fee NUMERIC(19,4),                                -- IMPCARTECLUB
    club_card_discount NUMERIC(19,4),                           -- REDCARTECLUB
    is_shipped_by_supplier BOOLEAN DEFAULT FALSE,               -- IS_PESADO
    is_partially_shipped_by_supplier BOOLEAN DEFAULT FALSE,     -- IS_PESADO_PARCIAL
    is_supplier BOOLEAN DEFAULT FALSE,                          -- FOURNISSEUR
    is_substitute BOOLEAN DEFAULT FALSE,                        -- IS_SUSTITUTIVO
    is_no_article BOOLEAN DEFAULT FALSE,                        -- IS_SIN_ARTICULO
    no_article_amount NUMERIC(19,4),                            -- IMP_SINART
    is_bav BOOLEAN DEFAULT FALSE,                               -- IS_BAV
    bav_amount NUMERIC(19,4),                                   -- IMP_BAV
    bav_order TEXT,                                             -- PEDIDO_BAV
    amount_due NUMERIC(19,4),                                   -- IMP_A_PAGAR
    next_available_number TEXT,                                 -- NextAvailableNumber
    is_generated_bav BOOLEAN DEFAULT FALSE,                     -- IS_BAV_GENERADO
    generated_bav_amount NUMERIC(19,4),                         -- IMP_BAV_GENERADO
    is_annulled BOOLEAN DEFAULT FALSE,                          -- ANULADO
    annulled_date DATE,                                         -- FECHA_ANULADO
    annulled_by TEXT,                                           -- ANULADO_POR
    created_by TEXT,                                            -- GRABADOR
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,             -- FECHA_GRABACION
    modified_by TEXT,                                           -- MODIFICADOR
    modified_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,            -- FECHA_MODIFICACION

    UNIQUE (site_id, order_reference),                          -- Clave compuesta en Orders
    UNIQUE (site_id, order_id),                                 -- Clave primaria compuesta en Orders

    -- Clave foránea compuesta
    FOREIGN KEY (site_id) REFERENCES sites(site_id) ON DELETE RESTRICT,
    FOREIGN KEY (site_id, action_id) REFERENCES actions(site_id, action_id) ON DELETE RESTRICT,
    FOREIGN KEY (site_id, customer_id) REFERENCES customers(site_id, customer_id) ON DELETE RESTRICT,
    FOREIGN KEY (site_id, action_priority_id) REFERENCES action_priority_types(site_id, action_priority_id) ON DELETE RESTRICT, -- Referencia a tipos de prioridad
    FOREIGN KEY (site_id, action_category_id) REFERENCES action_categories(site_id, action_category_id) ON DELETE RESTRICT, -- Referencia a categorías
    FOREIGN KEY (site_id, payment_type_id) REFERENCES order_payments(site_id, order_payments_id) ON DELETE RESTRICT, -- Referencia a tipos de pago
    FOREIGN KEY (site_id, brand_id) REFERENCES brands(site_id, brand_id) ON DELETE RESTRICT -- Referencia a brands
);
    
    DROP INDEX IF EXISTS idx_orders_order_id CASCADE;
    CREATE INDEX idx_orders_order_id ON orders (order_id);
    DROP INDEX IF EXISTS idx_orders_customer_id CASCADE;
    CREATE INDEX idx_orders_customer_id ON orders (customer_id);
    DROP INDEX IF EXISTS idx_orders_order_reference CASCADE;
    CREATE INDEX idx_orders_order_reference ON orders (site_id, order_reference);


DROP TABLE IF EXISTS order_addresses CASCADE;
CREATE TABLE order_addresses (
    address_id BIGINT PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
    order_id BIGINT NOT NULL,                      -- Clave foránea para la relación con Orders
    site_id INT NOT NULL,                       -- Clave foránea para la relación con Sites
    order_reference TEXT NOT NULL,                -- REF_PEDIDO (Referencia al pedido)
    -- Dirección de facturación    
    billing_customer_name TEXT,           
    billing_address_line1 TEXT,           
    billing_address_line2 TEXT,           
    billing_address_line3 TEXT,           
    billing_address_line4 TEXT,           
    billing_address_line5 TEXT,           
    billing_postal_code TEXT,                 -- CP
    billing_city TEXT,                        -- POBLACION
    billing_mobile_phone TEXT,                       -- TEL

    -- Dirección de envío
    shipping_customer_name TEXT,          
    shipping_address_line1 TEXT,          
    shipping_address_line2 TEXT,          
    shipping_address_line3 TEXT,          
    shipping_address_line4 TEXT,          
    shipping_address_line5 TEXT,          
    shipping_postal_code TEXT,                 -- CP
    shipping_city TEXT,                        -- POBLACION
    shipping_mobile_phone TEXT,                       -- TEL

    created_by TEXT,                                                                -- CREADOR
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,                                 -- FECHA_CREACION
    modified_by TEXT,                                                               -- MODIFICADOR
    modified_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,                                -- FECHA_MODIFICACION

    UNIQUE (site_id, order_id),                                                     -- Clave única para evitar duplicados por pedido y sitio
    UNIQUE (site_id, order_reference),                                              -- Evitar duplicados por referencia de pedido

    -- Relación con la tabla Orders
    FOREIGN KEY (site_id) REFERENCES sites(site_id) ON DELETE RESTRICT,
    FOREIGN KEY (site_id, order_id) REFERENCES Orders(site_id, order_id) ON DELETE RESTRICT
);

DROP INDEX IF EXISTS idx_order_addresses_order_id CASCADE;
CREATE INDEX idx_order_addresses_order_id ON order_addresses (site_id, order_id);

DROP INDEX IF EXISTS idx_order_addresses_order_reference CASCADE;
CREATE INDEX idx_order_addresses_order_reference ON order_addresses (site_id, order_reference);

DROP TABLE IF EXISTS order_notes CASCADE;
CREATE TABLE order_notes (
    note_id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    site_id BIGINT NOT NULL,
    order_id BIGINT NOT NULL,
    order_reference TEXT NOT NULL,
    note_text TEXT NOT NULL,
    is_internal BOOLEAN NOT NULL,
    created_by TEXT NOT NULL,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,

    UNIQUE (site_id, note_id),

    FOREIGN KEY (site_id) REFERENCES sites(site_id) ON DELETE RESTRICT,
    FOREIGN KEY (site_id, order_id) REFERENCES orders(site_id, order_id) ON DELETE RESTRICT
);
DROP INDEX IF EXISTS idx_order_notes_order_id CASCADE;
CREATE INDEX idx_order_notes_order_id ON order_notes (order_id);

DROP TABLE IF EXISTS order_items CASCADE;
CREATE TABLE order_items (
    order_item_id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,       -- Identificador único para el artículo del pedido
    site_id BIGINT NOT NULL,                                            -- ID del sitio asociado al pedido
    order_id BIGINT NOT NULL,                                           -- Clave foránea a Orders
    line_number INT,                                                    -- Número de línea en el pedido
    product_ref TEXT,                                                   -- ID_REF (Referencia al producto)
    catalog_ref TEXT,                                                   -- REF_ART (Referencia en el catálogo)
    catalog_code TEXT,                                                  -- CATALOGO (Código del catálogo)
    quantity INT,                                                       -- Cantidad del artículo
    product_description TEXT,                                           -- Articulo (Descripción del artículo)
    unit_price NUMERIC(19, 4),                                          -- Precio (Precio unitario del artículo)
    line_total NUMERIC(19, 4),                                          -- IMP (Importe total de la línea)
    is_abonado TEXT,                                                    -- ABONADO (Estado de abonado)
    stock_reserved BOOLEAN DEFAULT FALSE,                               -- RESERVASTOCK (Reserva de stock)
    is_substitute BOOLEAN DEFAULT FALSE,                                -- IS_SUSTITUTIVO (Indica si es sustitutivo)
    is_unavailable BOOLEAN DEFAULT FALSE,                               -- IS_SIN_ARTICULO (Indica si no hay artículo)
    apology_phrase TEXT,                                                -- FRASE_DISCULPA (Frase de disculpa)
    is_supplier_shipped BOOLEAN DEFAULT FALSE,                          -- IS_PESADO (Indica si el producto es pesado)
    created_by TEXT,                                                    -- CREADOR
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,                     -- FECHA_CREACION
    modified_by TEXT,                                                   -- MODIFICADOR
    modified_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,                    -- FECHA_MODIFICACION

    -- Clave única de negocio (opcional, si necesitas evitar duplicados de línea por pedido)
    UNIQUE (site_id, order_item_id),

    -- FK compuesta
    FOREIGN KEY (site_id) REFERENCES sites(site_id) ON DELETE RESTRICT,
    FOREIGN KEY (site_id, order_id) REFERENCES orders(site_id, order_id) ON DELETE RESTRICT
);

DROP INDEX IF EXISTS idx_order_items_order_id CASCADE;
    CREATE INDEX idx_order_items_order_id ON order_items (site_id, order_id);
DROP INDEX IF EXISTS idx_order_items_site_product CASCADE;
    CREATE INDEX idx_order_items_site_product ON order_items (site_id, product_ref);

DROP TABLE IF EXISTS order_item_substitutes CASCADE;
CREATE TABLE order_item_substitutes (
    substitute_id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,      -- PK técnica
    site_id BIGINT NOT NULL,                                            -- ID del sitio asociado al pedido
    order_item_id BIGINT NOT NULL,                                      -- Clave foránea a order_items
    substitute_product_ref TEXT,                                        -- ID_REF_SUST (Referencia del producto sustitutivo)
    substitute_catalog_ref TEXT,                                        -- REF_SUST (Referencia en el catálogo del sustitutivo)
    substitute_catalog_code TEXT,                                       -- CATALOGO_SUST (Código del catálogo del sustitutivo)
    substitute_quantity INT,                                            -- CANT_SUST (Cantidad sustitutiva)
    substitute_description TEXT,                                        -- DESC_SUST (Descripción del artículo sustitutivo)
    substitute_import NUMERIC(19, 4),                                   -- IMP_SUST (Importe del artículo sustitutivo)
    created_by TEXT,                                                    -- CREADOR
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,                     -- FECHA_CREACION
    modified_by TEXT,                                                   -- MODIFICADOR
    modified_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,                    -- FECHA_MODIFICACION

    -- Clave única para evitar duplicados
    UNIQUE (site_id, order_item_id, substitute_product_ref),

    -- Clave foránea compuesta hacia order_items
    FOREIGN KEY (site_id) REFERENCES sites(site_id) ON DELETE RESTRICT,
    FOREIGN KEY (site_id, order_item_id) REFERENCES order_items(site_id, order_item_id) ON DELETE RESTRICT
);

-- Índices opcionales para búsquedas frecuentes
DROP INDEX IF EXISTS idx_order_item_substitutes_order_item_id CASCADE;
CREATE INDEX idx_order_item_substitutes_order_item_id ON order_item_substitutes (order_item_id);
DROP INDEX IF EXISTS idx_order_item_substitutes_substitute_product_ref CASCADE;
CREATE INDEX idx_order_item_substitutes_substitute_product_ref ON order_item_substitutes (substitute_product_ref);

DROP TABLE IF EXISTS packaging CASCADE;
CREATE TABLE packaging (
    packaging_id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    packaging_type TEXT NOT NULL UNIQUE,        -- Tipo de embalaje único
    packaging_name TEXT,
    weight NUMERIC(10,2),
    dimension TEXT,
    
    created_by TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    modified_by TEXT,
    modified_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

DROP TABLE IF EXISTS packaging_sites CASCADE;
CREATE TABLE packaging_sites (
    packaging_site_id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    site_id BIGINT NOT NULL,
    packaging_id BIGINT NOT NULL,

    assigned_by TEXT NOT NULL,
    assigned_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,

    unassigned_by TEXT,
    unassigned_at TIMESTAMP,
    
    is_active BOOLEAN NOT NULL DEFAULT TRUE,  -- Estado del enlace (activo = asignado)

    UNIQUE (site_id, packaging_id),

    FOREIGN KEY (site_id) REFERENCES sites(site_id) ON DELETE RESTRICT,
    FOREIGN KEY (packaging_id) REFERENCES packaging(packaging_id) ON DELETE RESTRICT
);

-- Índice para búsquedas rápidas por cliente y estado
DROP INDEX IF EXISTS idx_packaging_sites_site_active CASCADE;
CREATE INDEX idx_packaging_sites_site_active ON packaging_sites (site_id, is_active);

-- Índice para encontrar todos los embalajes asignados o desasignados
DROP INDEX IF EXISTS idx_packaging_sites_active CASCADE;
CREATE INDEX idx_packaging_sites_active ON packaging_sites (is_active);

-- Índice para buscar embalajes por ID (en consultas de packaging general)
DROP INDEX IF EXISTS idx_packaging_sites_packaging_id CASCADE;
CREATE INDEX idx_packaging_sites_packaging_id ON packaging_sites (packaging_id);

DROP TABLE IF EXISTS product_substitutes CASCADE;
CREATE TABLE product_substitutes (
  substitute_id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,           -- ID autoincremental por sitio
  site_id BIGINT NOT NULL,                                                  -- Site ID (multi-tenant support)
  ref_start TEXT,                                                           -- REF_INICIO
  cat_start TEXT,                                                           -- CAT_INICIO
  desc_start TEXT,                                                          -- DESC_INICIO
  ref_end TEXT,                                                             -- REF_FIN
  cat_end TEXT,                                                             -- CAT_FIN
  desc_end TEXT,                                                            -- DESC_FIN
  max_quantity INT,                                                         -- CANT_MAX
  used_quantity INT,                                                        -- CANT_USED
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,                           -- DATE_CREATION
  expires_at TIMESTAMP,                                                     -- DATE_MAX
  created_by TEXT,                                                          -- CREATED_BY
  modified_at TIMESTAMP,                                                    -- DATE_MODIF
  modified_by TEXT,                                                         -- MODIF_BY
  is_active BOOLEAN DEFAULT FALSE,                                          -- ACTIVE

  UNIQUE (site_id, substitute_id),
  UNIQUE (site_id, ref_start, ref_end),

  FOREIGN KEY (site_id) REFERENCES sites(site_id) ON DELETE RESTRICT
);

DROP INDEX IF EXISTS idx_product_substitutes_site_ref_start CASCADE;
CREATE INDEX idx_product_substitutes_site_ref_start ON product_substitutes (site_id, ref_start);
DROP INDEX IF EXISTS idx_product_substitutes_site_ref_end CASCADE;
  CREATE INDEX idx_product_substitutes_site_ref_end   ON product_substitutes (site_id, ref_end);

DROP TABLE IF EXISTS product_substitutes_log CASCADE;
CREATE TABLE product_substitutes_log (
    log_id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    site_id BIGINT NOT NULL,                                      -- ID del sitio
    substitute_id BIGINT NOT NULL,                               -- ID autoincremental  
    order_id TEXT,                                         -- PEDIDO
    is_bundle BOOLEAN,                                            -- IS_BUNDLE
    bundle_id TEXT,                                        -- ID_BUNDLE
    sku_bundle TEXT,                                       -- SKU_BUNDLE
    sku_wms TEXT,                                          -- SKU_WMS
    quantity INT,                                                 -- QTY
    order_line TEXT,                                       -- LINEA_PEDIDO
    description TEXT,                                             -- DESCRIPCION
    price NUMERIC(10,2),                                          -- PRECIO
    total NUMERIC(10,2),                                          -- IMP
    sku_wms_substitute TEXT,                               -- SKU_WMS_SUST
    quantity_substitute INT,                                      -- QTY_SUST
    description_substitute TEXT,                                  -- DESC_SUST
    price_substitute NUMERIC(10,2),                               -- PRECIO_SUST
    total_substitute NUMERIC(10,2),                               -- IMP_SUST
    apology_phrase TEXT,                                          -- FRASE_DISCULPA 
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,               -- DATE_CREATION
    created_by TEXT,                                              -- CREATED_BY 
    UNIQUE (site_id, substitute_id),                                    -- 🔐 Clave primaria compuesta

    FOREIGN KEY (site_id) REFERENCES sites(site_id) ON DELETE RESTRICT,
    FOREIGN KEY (site_id, substitute_id) REFERENCES product_substitutes(site_id, substitute_id) ON DELETE RESTRICT
);

DROP INDEX IF EXISTS idx_product_substitutes_log_site_id CASCADE;
CREATE INDEX idx_product_substitutes_log_site_id ON product_substitutes_log (site_id, substitute_id);

DROP TABLE IF EXISTS products CASCADE;
CREATE TABLE products (
    product_id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,     -- Identificador único del producto
    site_id BIGINT NOT NULL,                                        -- Identificador del sitio (clave primaria compuesta)
    product_ref TEXT NOT NULL,                                        -- REFERENCIA: Referencia del producto
    catalog TEXT,                                                   -- CATALOGO: Código del catálogo
    brand_id BIGINT NOT NULL,                                      -- MARCA: Identificador de la marca
    action TEXT,                                                    -- ACCION: Acción asociada
    description TEXT,                                               -- DESCRIPCION: Descripción del producto
    weight NUMERIC(10, 3),                                          -- PESO: Peso del producto
    vat NUMERIC(10, 3),                                             -- IVA: Impuesto aplicado
    picking_location TEXT,                                          -- UBICACION_PICKING: Ubicación de picking
    storage_location TEXT,                                          -- UBICACION_ALMACEN: Ubicación en almacén
    packaging SMALLINT,                                             -- EMBALAJE: Tipo de embalaje
    price NUMERIC(19, 4),                                           -- PRECIO: Precio del producto
    units_per_pack INT,                                             -- UNIDADES_PACK: Unidades por pack
    stock INT,                                                      -- STOCK: Cantidad en stock
    cost NUMERIC(19, 4),                                            -- COSTE: Coste del producto
    additional_info TEXT,                                           -- INF_ADICIONAL: Información adicional
    vat_type SMALLINT,                                              -- TIPO_IVA: Tipo de IVA
    status TEXT,                                                    -- ESTADO: Estado del producto
    blocked_stock SMALLINT,                                         -- STOCKBLOQUEADO: Cantidad de stock bloqueado
    is_shipped_by_supplier BOOLEAN NOT NULL DEFAULT FALSE,          -- PESADO: Producto pesado, valor predeterminado falso
    created_by TEXT,                                                -- CREADOR
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,                 -- FECHA_CREACION
    modified_by TEXT,                                               -- MODIFICADOR
    modified_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,                -- FECHA_MODIFICACION

    UNIQUE (site_id, product_ref),                               -- Clave primaria compuesta por site_id y product_id
    UNIQUE (site_id, product_id),                                                -- Clave primaria compuesta por site_id y product_id

    FOREIGN KEY (site_id) REFERENCES sites(site_id) ON DELETE RESTRICT,
    FOREIGN KEY (site_id, brand_id) REFERENCES brands(site_id, brand_id) ON DELETE RESTRICT -- Clave foránea a brands
);

DROP INDEX IF EXISTS idx_products_site_product_ref CASCADE;
    CREATE INDEX idx_products_site_product_ref ON products (site_id, product_ref);

DROP TABLE IF EXISTS product_bundles CASCADE;
CREATE TABLE product_bundles (
    bundle_item_id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,                 -- ID único para cada item del bundle
    site_id BIGINT NOT NULL,                                                        -- ID del sitio al que pertenece el bundle
    bundle_id INT,                                                                  -- ID_BUNDLE (Identificador del bundle)
    product_id BIGINT NOT NULL,                                                     -- ID del producto (clave foránea a products)
    sku_bundle TEXT,                                                                -- SKU_BUNDLE
    sku_wms TEXT,                                                                   -- SKU_WMS
    qty INT,                                                                        -- QTY (Cantidad)
    date_creation TIMESTAMP,                                                        -- DATE_CREATION (Fecha de creación)
    created_by TEXT,                                                                -- CREATED_BY (Creado por)
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,                                 -- FECHA_CREACION
    modified_by TEXT,                                                               -- MODIF_BY (Modificado por)
    modified_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,                                -- FECHA_MODIFICACION
    is_active BOOLEAN DEFAULT FALSE,                                                -- IS_ACTIVE (Activo)
    
    UNIQUE (site_id, bundle_id),                                          -- Clave primaria compuesta

    FOREIGN KEY (site_id) REFERENCES sites(site_id) ON DELETE RESTRICT,
    FOREIGN KEY (site_id, product_id) REFERENCES products(site_id, product_id) ON DELETE RESTRICT     -- Clave foránea a products
);

DROP INDEX IF EXISTS idx_bundles_sku_bundle CASCADE;
CREATE INDEX idx_bundles_sku_bundle ON product_bundles (sku_bundle);                        -- Índice para mejorar las búsquedas
DROP INDEX IF EXISTS idx_bundles_sku_wms CASCADE;
CREATE INDEX idx_bundles_sku_wms ON product_bundles (sku_wms);                              -- Índice para mejorar las búsquedas

DROP TABLE IF EXISTS returns CASCADE;
CREATE TABLE returns (
    return_id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY, -- PK técnica
    site_id BIGINT NOT NULL,                                   -- Cliente
    order_reference TEXT NOT NULL,                           -- Pedido asociado
    return_date DATE,                                          -- Fecha de devolución
    action TEXT,                                               -- Acción realizada
    customer_code BIGINT NOT NULL,                             -- Número de cliente
    marked TEXT,                                               -- Marcado

    created_by TEXT,                                           -- Auditoría
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    modified_by TEXT,
    modified_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,

    -- Clave foránea: prohibido eliminar cliente si tiene devoluciones
    FOREIGN KEY (site_id) REFERENCES sites(site_id) ON DELETE RESTRICT,
    FOREIGN KEY (site_id, customer_code) REFERENCES customers(site_id, customer_code) ON DELETE RESTRICT,
    FOREIGN KEY (site_id, order_reference) REFERENCES orders(site_id, order_reference) ON DELETE RESTRICT
);

    -- Índice para búsquedas rápidas por cliente
DROP INDEX IF EXISTS idx_returns_site_customer_code CASCADE;
    CREATE INDEX idx_returns_site_customer_code ON returns (site_id, customer_code);

    -- Índice para búsquedas rápidas por pedido
DROP INDEX IF EXISTS idx_returns_site_order_reference CASCADE;
    CREATE INDEX idx_returns_site_order_reference ON returns (site_id, order_reference);

DROP TABLE IF EXISTS return_items CASCADE;
CREATE TABLE return_items (
    return_item_id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY, -- PK técnica
    return_id BIGINT NOT NULL,                                       -- Clave foránea a returns
    product_ref TEXT NOT NULL,                                      -- Referencia del producto
    quantity INT NOT NULL,                                          -- Cantidad devuelta
    reason TEXT,                                                    -- Motivo de la devolución
    created_by TEXT,                                               -- Auditoría
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    modified_by TEXT,
    modified_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,

    FOREIGN KEY (return_id) REFERENCES returns(return_id) ON DELETE CASCADE -- Clave foránea a returns
);

DROP INDEX IF EXISTS idx_return_items_return_id CASCADE;
    CREATE INDEX idx_return_items_return_id ON return_items (return_id);
DROP INDEX IF EXISTS idx_return_items_product_ref CASCADE;
    CREATE INDEX idx_return_items_product_ref ON return_items (product_ref);

DROP TABLE IF EXISTS invoicing CASCADE;
CREATE TABLE invoicing (
    invoice_id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    site_id BIGINT NOT NULL,
    invoicing_date TIMESTAMP,
    brand TEXT,
    invoice_number TEXT NOT NULL,
    customer_code BIGINT,
    first_name TEXT,
    last_name TEXT,
    order_reference TEXT,
    priority_cost NUMERIC(19,4),
    transport_cost NUMERIC(19,4),
    total_transport NUMERIC(19,4),
    colissimo NUMERIC(19,4),
    bi1 NUMERIC(19,4),
    tva1 NUMERIC(19,4),
    bi2 NUMERIC(19,4),
    tva2 NUMERIC(19,4),
    total NUMERIC(19,4),
    status TEXT,

    is_unpaid BOOLEAN DEFAULT FALSE,
    unpaid_amount TEXT,
    unpaid_date TEXT,

    is_recovered BOOLEAN DEFAULT FALSE,
    recovered_amount TEXT,
    recovered_date TEXT,

    is_uncollectible BOOLEAN DEFAULT FALSE,
    uncollectible_amount TEXT,
    uncollectible_date TEXT,

    is_commission_paid BOOLEAN DEFAULT FALSE,
    mocall_invoice TEXT,
    commission TEXT,
    worker TEXT,
    invoice_date TIMESTAMP,

    created_by TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    modified_by TEXT,
    modified_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,

    UNIQUE (site_id, invoice_number),
    UNIQUE (site_id, invoice_id), -- Clave primaria compuesta

    FOREIGN KEY (site_id) REFERENCES sites(site_id) ON DELETE RESTRICT,
    FOREIGN KEY (site_id, customer_code) REFERENCES customers(site_id, customer_code) ON DELETE RESTRICT
);

DROP INDEX IF EXISTS idx_invoicing_invoice_id CASCADE;
CREATE INDEX idx_invoicing_invoice_id on invoicing (site_id, invoice_id);

DROP INDEX IF EXISTS idx_invoicing_customer_code CASCADE;
CREATE INDEX idx_invoicing_customer_code on invoicing (site_id, customer_code);

DROP INDEX IF EXISTS idx_invoicing_invoice_number CASCADE;
CREATE INDEX idx_invoicing_invoice_number on invoicing (site_id, invoice_number);

DROP TABLE IF EXISTS invoicing_refunds CASCADE;
CREATE TABLE invoicing_refunds (
    refund_id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    site_id BIGINT NOT NULL,
    invoice_id BIGINT NOT NULL,
    refund_date TIMESTAMP,
    invoice_date TIMESTAMP,
    brand TEXT,
    refund_invoice_number TEXT NOT NULL,
    customer_code BIGINT,
    first_name TEXT,
    last_name TEXT,
    order_reference TEXT,
    priority_cost NUMERIC(19,4),
    transport_cost NUMERIC(19,4),
    total_transport NUMERIC(19,4),
    colissimo NUMERIC(19,4),
    bi1 NUMERIC(19,4),
    tva1 NUMERIC(19,4),
    bi2 NUMERIC(19,4),
    tva2 NUMERIC(19,4),
    total NUMERIC(19,4),
    status TEXT,
    worker TEXT,
    related_invoice TEXT,
    created_by TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    modified_by TEXT,
    modified_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,

    UNIQUE (site_id, refund_invoice_number),
    UNIQUE (site_id, refund_id), -- Clave primaria compuesta
    
    FOREIGN KEY (site_id) REFERENCES sites(site_id) ON DELETE RESTRICT,
    FOREIGN KEY (site_id, customer_code) REFERENCES customers(site_id, customer_code) ON DELETE RESTRICT,
    FOREIGN KEY (site_id, invoice_id) REFERENCES invoicing(site_id, invoice_id) ON DELETE RESTRICT
);

DROP INDEX IF EXISTS idx_invoicing_refunds_refund_id CASCADE;
CREATE INDEX idx_invoicing_refunds_refund_id on invoicing_refunds (site_id, refund_id);

DROP INDEX IF EXISTS idx_invoicing_refunds_customer_code CASCADE;
CREATE INDEX idx_invoicing_refunds_customer_code on invoicing_refunds (site_id, customer_code);

DROP INDEX IF EXISTS idx_invoicing_refunds_refund_invoice_number CASCADE;
CREATE INDEX idx_invoicing_refunds_refund_invoice_number on invoicing_refunds (site_id, refund_invoice_number);

DROP TABLE IF EXISTS montant CASCADE;
CREATE TABLE montant (
    montant_id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,   -- Identificador único
    site_id BIGINT NOT NULL,                                      -- Cliente/Tenant
    range_from DOUBLE PRECISION,                                  -- Límite inferior del rango
    range_to DOUBLE PRECISION,                                    -- Límite superior del rango
    amount DOUBLE PRECISION,                                      -- Monto correspondiente
    created_by TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    modified_by TEXT,
    modified_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,

    UNIQUE (site_id, range_from, range_to),                       -- Asegurar que no haya rangos duplicados para el mismo sitio
    FOREIGN KEY (site_id) REFERENCES sites(site_id) ON DELETE RESTRICT
);

-- Índices recomendados
DROP INDEX IF EXISTS idx_montant_site_from CASCADE;
DROP INDEX IF EXISTS idx_montant_site_to CASCADE;
CREATE INDEX idx_montant_site_from ON montant (site_id, range_from);
CREATE INDEX idx_montant_site_to ON montant (site_id, range_to);

DROP TABLE IF EXISTS recency CASCADE;
CREATE TABLE recency (
    recency_id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    site_id BIGINT NOT NULL,
    range_from TEXT,
    range_to TEXT,
    recency_label TEXT,
    created_by TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    modified_by TEXT,
    modified_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,

    UNIQUE (site_id, recency_id),
    FOREIGN KEY (site_id) REFERENCES sites(site_id) ON DELETE RESTRICT
);

DROP INDEX IF EXISTS idx_recency_recency_id CASCADE;
CREATE INDEX idx_recency_recency_id ON recency (site_id, recency_id);
DROP INDEX IF EXISTS idx_recency_site_label CASCADE;
CREATE INDEX idx_recency_site_label ON recency (site_id, recency_label);

DROP TABLE IF EXISTS customer_participants CASCADE;

CREATE TABLE customer_participants (
    customer_participant_id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    site_id BIGINT NOT NULL,
    customer_id BIGINT NOT NULL,         -- FK a customers
    customer_code BIGINT NOT NULL,       -- Código de cliente redundante
    action TEXT,
    marked TEXT,
    reading_date DATE,
    created_by TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    modified_by TEXT,
    modified_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,

    UNIQUE (site_id, customer_id),
    FOREIGN KEY (site_id) REFERENCES sites(site_id) ON DELETE RESTRICT,
    FOREIGN KEY (site_id, customer_id) REFERENCES customers(site_id, customer_id) ON DELETE RESTRICT
);

CREATE INDEX idx_customer_participants_site_customer ON customer_participants (site_id, customer_id);
CREATE INDEX idx_customer_participants_site_code ON customer_participants (site_id, customer_code);

DROP TABLE IF EXISTS product_unavailable CASCADE;

CREATE TABLE product_unavailable (
    unavailable_id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    site_id BIGINT NOT NULL,
    reference TEXT,
    catalog TEXT,
    description TEXT,
    max_quantity INT,
    used_quantity INT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    expires_at TIMESTAMP,
    created_by TEXT,
    modified_at TIMESTAMP,
    modified_by TEXT,
    is_active BOOLEAN NOT NULL DEFAULT FALSE,

    UNIQUE (site_id, unavailable_id),
    FOREIGN KEY (site_id) REFERENCES sites(site_id) ON DELETE RESTRICT
);

CREATE INDEX idx_product_unavailable_site_reference ON product_unavailable (site_id, reference);

DROP TABLE IF EXISTS product_unavailable_log CASCADE;

CREATE TABLE product_unavailable_log (
    unavailable_log_id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    site_id BIGINT NOT NULL,
    order_reference TEXT,         -- PEDIDO
    reference TEXT,               -- REFERENCIA
    order_line INT,               -- LINEA_PEDIDO
    quantity INT,                 -- CANT
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by TEXT,

    FOREIGN KEY (site_id) REFERENCES sites(site_id) ON DELETE RESTRICT
);

CREATE INDEX idx_product_unavailable_log_site_order ON product_unavailable_log (site_id, order_reference);
CREATE INDEX idx_product_unavailable_log_site_reference ON product_unavailable_log (site_id, reference);

DROP TABLE IF EXISTS stock_entries CASCADE;
CREATE TABLE stock_entries (
    stock_entry_id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    site_id BIGINT NOT NULL,
    product_id BIGINT NOT NULL,              -- FK a products
    reference TEXT,                          -- Opcional si quieres duplicar el campo
    description TEXT,
    quantity NUMERIC(19,4),                  -- Cantidad, ahora numérico
    invoice_or_delivery TEXT,                -- ALBARAN_FACTURA
    supplier TEXT,
    entry_date DATE,                         -- Fecha de entrada
    worker TEXT,
    entry_type TEXT,
    created_by TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    modified_by TEXT,
    modified_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,

    FOREIGN KEY (site_id) REFERENCES sites(site_id) ON DELETE RESTRICT,
    FOREIGN KEY (site_id, product_id) REFERENCES products(site_id, product_id) ON DELETE RESTRICT
);

CREATE INDEX idx_stock_entries_site_product ON stock_entries (site_id, product_id);
CREATE INDEX idx_stock_entries_site_supplier ON stock_entries (site_id, supplier);

-- Crear el tipo ENUM si no existe
DO $$
BEGIN
  IF NOT EXISTS (SELECT 1 FROM pg_type WHERE typname = 'error_severity') THEN
    CREATE TYPE error_severity AS ENUM ('info', 'warning', 'error', 'critical');
  END IF;
END$$;

-- Crear la tabla error_log
DROP TABLE IF EXISTS error_log CASCADE;
CREATE TABLE error_log (
    error_log_id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    site_id BIGINT NOT NULL,
    event_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,    -- FECHA
    order_reference TEXT,                              -- PEDIDO
    description TEXT,                                  -- DESCRIPCION
    section TEXT,                                      -- SECCION
    user_name TEXT,                                    -- USUARIO
    severity error_severity DEFAULT 'error',           -- Gravedad (ENUM: info, warning, error, critical)
    is_saved BOOLEAN NOT NULL DEFAULT FALSE,           -- GRABADO
    is_modified BOOLEAN NOT NULL DEFAULT FALSE,        -- MODIFICADO
    is_invoiced BOOLEAN NOT NULL DEFAULT FALSE,        -- FACTURADO
    is_resolved BOOLEAN NOT NULL DEFAULT FALSE,        -- Solucionado o pendiente
    created_by TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    modified_by TEXT,
    modified_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,

    FOREIGN KEY (site_id) REFERENCES sites(site_id) ON DELETE RESTRICT
);

CREATE INDEX idx_error_log_site_order ON error_log (site_id, order_reference);
CREATE INDEX idx_error_log_site_section ON error_log (site_id, section);
CREATE INDEX idx_error_log_site_severity ON error_log (site_id, severity);
CREATE INDEX idx_error_log_site_resolved ON error_log (site_id, is_resolved);